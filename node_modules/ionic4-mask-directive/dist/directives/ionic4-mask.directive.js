import { Directive, HostListener, Input } from '@angular/core';
import { NgControl } from '@angular/forms';
var Ionic4MaskDirective = (function () {
    function Ionic4MaskDirective(control) {
        this.control = control;
    }
    /*when loading dynamically data to the input, without this
    the mask will only work on keyup event changes */
    Ionic4MaskDirective.prototype.ngOnChanges = function () {
        var value = this.control.control.value;
        if (value) {
            this.control.control.setValue(this.format(value));
        }
    };
    Ionic4MaskDirective.prototype.onKeyUp = function ($event) {
        if ($event.keyCode !== 13 && $event.keyCode !== 9) {
            var value = this.control.control.value;
            this.control.control.setValue(this.format(value));
        }
    };
    Ionic4MaskDirective.prototype.format = function (v) {
        var s = '';
        var matches = v.match(/[a-zA-Z0-9]+/g);
        if (matches !== null) {
            var value = matches.join('').split('');
            var chars = this.mask.split('');
            for (var _i = 0, chars_1 = chars; _i < chars_1.length; _i++) {
                var c = chars_1[_i];
                if (value.length === 0) {
                    break;
                }
                switch (c) {
                    case '#':
                        s += value[0];
                        value = value.slice(1);
                        break;
                    case '9':
                        if (value[0].match(/\d/) !== null) {
                            s += value[0];
                            value = value.slice(1);
                        }
                        break;
                    case 'A':
                        if (value[0].match(/[a-zA-Z]/) !== null) {
                            s += value[0];
                            value = value.slice(1);
                        }
                        break;
                    default:
                        s += c;
                }
            }
        }
        return s;
    };
    return Ionic4MaskDirective;
}());
export { Ionic4MaskDirective };
Ionic4MaskDirective.decorators = [
    { type: Directive, args: [{
                selector: '[mask]',
                providers: [{
                        provide: NgControl,
                        useExisting: Ionic4MaskDirective,
                        multi: true
                    }]
            },] },
];
/** @nocollapse */
Ionic4MaskDirective.ctorParameters = function () { return [
    { type: NgControl, },
]; };
Ionic4MaskDirective.propDecorators = {
    'mask': [{ type: Input },],
    'ngOnChanges': [{ type: HostListener, args: ['change',] },],
    'onKeyUp': [{ type: HostListener, args: ['keyup', ['$event'],] },],
};
//# sourceMappingURL=ionic4-mask.directive.js.map